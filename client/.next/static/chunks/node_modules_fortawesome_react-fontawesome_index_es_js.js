"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_fortawesome_react-fontawesome_index_es_js"],{

/***/ "./node_modules/@fortawesome/react-fontawesome/index.es.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@fortawesome/react-fontawesome/index.es.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FontAwesomeIcon\": function() { return /* binding */ FontAwesomeIcon; }\n/* harmony export */ });\n/* harmony import */ var _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fortawesome/fontawesome-svg-core */ \"./node_modules/@fortawesome/fontawesome-svg-core/index.es.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n  var keys = Object.keys(object);\r\n\r\n  if (Object.getOwnPropertySymbols) {\r\n    var symbols = Object.getOwnPropertySymbols(object);\r\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\r\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\r\n    })), keys.push.apply(keys, symbols);\r\n  }\r\n\r\n  return keys;\r\n}\r\n\r\nfunction _objectSpread2(target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = null != arguments[i] ? arguments[i] : {};\r\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\r\n      _defineProperty(target, key, source[key]);\r\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\r\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\r\n    });\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nfunction _typeof(obj) {\r\n  \"@babel/helpers - typeof\";\r\n\r\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\r\n    return typeof obj;\r\n  } : function (obj) {\r\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n  }, _typeof(obj);\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nfunction _objectWithoutProperties(source, excluded) {\r\n  if (source == null) return {};\r\n\r\n  var target = _objectWithoutPropertiesLoose(source, excluded);\r\n\r\n  var key, i;\r\n\r\n  if (Object.getOwnPropertySymbols) {\r\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\r\n\r\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\r\n      key = sourceSymbolKeys[i];\r\n      if (excluded.indexOf(key) >= 0) continue;\r\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n\r\n  return arr2;\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}\r\n\r\n// Get CSS class list from a props object\r\nfunction classList(props) {\r\n  var _classes;\r\n\r\n  var beat = props.beat,\r\n      fade = props.fade,\r\n      beatFade = props.beatFade,\r\n      bounce = props.bounce,\r\n      shake = props.shake,\r\n      flash = props.flash,\r\n      spin = props.spin,\r\n      spinPulse = props.spinPulse,\r\n      spinReverse = props.spinReverse,\r\n      pulse = props.pulse,\r\n      fixedWidth = props.fixedWidth,\r\n      inverse = props.inverse,\r\n      border = props.border,\r\n      listItem = props.listItem,\r\n      flip = props.flip,\r\n      size = props.size,\r\n      rotation = props.rotation,\r\n      pull = props.pull; // map of CSS class names to properties\r\n\r\n  var classes = (_classes = {\r\n    'fa-beat': beat,\r\n    'fa-fade': fade,\r\n    'fa-beat-fade': beatFade,\r\n    'fa-bounce': bounce,\r\n    'fa-shake': shake,\r\n    'fa-flash': flash,\r\n    'fa-spin': spin,\r\n    'fa-spin-reverse': spinReverse,\r\n    'fa-spin-pulse': spinPulse,\r\n    'fa-pulse': pulse,\r\n    'fa-fw': fixedWidth,\r\n    'fa-inverse': inverse,\r\n    'fa-border': border,\r\n    'fa-li': listItem,\r\n    'fa-flip-horizontal': flip === 'horizontal' || flip === 'both',\r\n    'fa-flip-vertical': flip === 'vertical' || flip === 'both'\r\n  }, _defineProperty(_classes, \"fa-\".concat(size), typeof size !== 'undefined' && size !== null), _defineProperty(_classes, \"fa-rotate-\".concat(rotation), typeof rotation !== 'undefined' && rotation !== null && rotation !== 0), _defineProperty(_classes, \"fa-pull-\".concat(pull), typeof pull !== 'undefined' && pull !== null), _defineProperty(_classes, 'fa-swap-opacity', props.swapOpacity), _classes); // map over all the keys in the classes object\r\n  // return an array of the keys where the value for the key is not null\r\n\r\n  return Object.keys(classes).map(function (key) {\r\n    return classes[key] ? key : null;\r\n  }).filter(function (key) {\r\n    return key;\r\n  });\r\n}\r\n\r\n// Camelize taken from humps\r\n// humps is copyright Â© 2012+ Dom Christie\r\n// Released under the MIT license.\r\n// Performant way to determine if object coerces to a number\r\nfunction _isNumerical(obj) {\r\n  obj = obj - 0; // eslint-disable-next-line no-self-compare\r\n\r\n  return obj === obj;\r\n}\r\n\r\nfunction camelize(string) {\r\n  if (_isNumerical(string)) {\r\n    return string;\r\n  } // eslint-disable-next-line no-useless-escape\r\n\r\n\r\n  string = string.replace(/[\\-_\\s]+(.)?/g, function (match, chr) {\r\n    return chr ? chr.toUpperCase() : '';\r\n  }); // Ensure 1st char is always lowercase\r\n\r\n  return string.substr(0, 1).toLowerCase() + string.substr(1);\r\n}\r\n\r\nvar _excluded$1 = [\"style\"];\r\n\r\nfunction capitalize(val) {\r\n  return val.charAt(0).toUpperCase() + val.slice(1);\r\n}\r\n\r\nfunction styleToObject(style) {\r\n  return style.split(';').map(function (s) {\r\n    return s.trim();\r\n  }).filter(function (s) {\r\n    return s;\r\n  }).reduce(function (acc, pair) {\r\n    var i = pair.indexOf(':');\r\n    var prop = camelize(pair.slice(0, i));\r\n    var value = pair.slice(i + 1).trim();\r\n    prop.startsWith('webkit') ? acc[capitalize(prop)] = value : acc[prop] = value;\r\n    return acc;\r\n  }, {});\r\n}\r\n\r\nfunction convert(createElement, element) {\r\n  var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\r\n  if (typeof element === 'string') {\r\n    return element;\r\n  }\r\n\r\n  var children = (element.children || []).map(function (child) {\r\n    return convert(createElement, child);\r\n  });\r\n  /* eslint-disable dot-notation */\r\n\r\n  var mixins = Object.keys(element.attributes || {}).reduce(function (acc, key) {\r\n    var val = element.attributes[key];\r\n\r\n    switch (key) {\r\n      case 'class':\r\n        acc.attrs['className'] = val;\r\n        delete element.attributes['class'];\r\n        break;\r\n\r\n      case 'style':\r\n        acc.attrs['style'] = styleToObject(val);\r\n        break;\r\n\r\n      default:\r\n        if (key.indexOf('aria-') === 0 || key.indexOf('data-') === 0) {\r\n          acc.attrs[key.toLowerCase()] = val;\r\n        } else {\r\n          acc.attrs[camelize(key)] = val;\r\n        }\r\n\r\n    }\r\n\r\n    return acc;\r\n  }, {\r\n    attrs: {}\r\n  });\r\n\r\n  var _extraProps$style = extraProps.style,\r\n      existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style,\r\n      remaining = _objectWithoutProperties(extraProps, _excluded$1);\r\n\r\n  mixins.attrs['style'] = _objectSpread2(_objectSpread2({}, mixins.attrs['style']), existingStyle);\r\n  /* eslint-enable */\r\n\r\n  return createElement.apply(void 0, [element.tag, _objectSpread2(_objectSpread2({}, mixins.attrs), remaining)].concat(_toConsumableArray(children)));\r\n}\r\n\r\nvar PRODUCTION = false;\r\n\r\ntry {\r\n  PRODUCTION = \"development\" === 'production';\r\n} catch (e) {}\r\n\r\nfunction log () {\r\n  if (!PRODUCTION && console && typeof console.error === 'function') {\r\n    var _console;\r\n\r\n    (_console = console).error.apply(_console, arguments);\r\n  }\r\n}\r\n\r\nfunction normalizeIconArgs(icon) {\r\n  // this has everything that it needs to be rendered which means it was probably imported\r\n  // directly from an icon svg package\r\n  if (icon && _typeof(icon) === 'object' && icon.prefix && icon.iconName && icon.icon) {\r\n    return icon;\r\n  }\r\n\r\n  if (_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.parse.icon) {\r\n    return _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.parse.icon(icon);\r\n  } // if the icon is null, there's nothing to do\r\n\r\n\r\n  if (icon === null) {\r\n    return null;\r\n  } // if the icon is an object and has a prefix and an icon name, return it\r\n\r\n\r\n  if (icon && _typeof(icon) === 'object' && icon.prefix && icon.iconName) {\r\n    return icon;\r\n  } // if it's an array with length of two\r\n\r\n\r\n  if (Array.isArray(icon) && icon.length === 2) {\r\n    // use the first item as prefix, second as icon name\r\n    return {\r\n      prefix: icon[0],\r\n      iconName: icon[1]\r\n    };\r\n  } // if it's a string, use it as the icon name\r\n\r\n\r\n  if (typeof icon === 'string') {\r\n    return {\r\n      prefix: 'fas',\r\n      iconName: icon\r\n    };\r\n  }\r\n}\r\n\r\n// creates an object with a key of key\r\n// and a value of value\r\n// if certain conditions are met\r\nfunction objectWithKey(key, value) {\r\n  // if the value is a non-empty array\r\n  // or it's not an array but it is truthy\r\n  // then create the object with the key and the value\r\n  // if not, return an empty array\r\n  return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty({}, key, value) : {};\r\n}\r\n\r\nvar _excluded = [\"forwardedRef\"];\r\nfunction FontAwesomeIcon(_ref) {\r\n  var forwardedRef = _ref.forwardedRef,\r\n      props = _objectWithoutProperties(_ref, _excluded);\r\n\r\n  var iconArgs = props.icon,\r\n      maskArgs = props.mask,\r\n      symbol = props.symbol,\r\n      className = props.className,\r\n      title = props.title,\r\n      titleId = props.titleId,\r\n      maskId = props.maskId;\r\n  var iconLookup = normalizeIconArgs(iconArgs);\r\n  var classes = objectWithKey('classes', [].concat(_toConsumableArray(classList(props)), _toConsumableArray(className.split(' '))));\r\n  var transform = objectWithKey('transform', typeof props.transform === 'string' ? _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.parse.transform(props.transform) : props.transform);\r\n  var mask = objectWithKey('mask', normalizeIconArgs(maskArgs));\r\n  var renderedIcon = (0,_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__.icon)(iconLookup, _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, classes), transform), mask), {}, {\r\n    symbol: symbol,\r\n    title: title,\r\n    titleId: titleId,\r\n    maskId: maskId\r\n  }));\r\n\r\n  if (!renderedIcon) {\r\n    log('Could not find icon', iconLookup);\r\n    return null;\r\n  }\r\n\r\n  var abstract = renderedIcon.abstract;\r\n  var extraProps = {\r\n    ref: forwardedRef\r\n  };\r\n  Object.keys(props).forEach(function (key) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!FontAwesomeIcon.defaultProps.hasOwnProperty(key)) {\r\n      extraProps[key] = props[key];\r\n    }\r\n  });\r\n  return convertCurry(abstract[0], extraProps);\r\n}\r\nFontAwesomeIcon.displayName = 'FontAwesomeIcon';\r\nFontAwesomeIcon.propTypes = {\r\n  beat: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  border: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  bounce: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  className: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\r\n  fade: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  flash: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  mask: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_2___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)]),\r\n  maskId: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\r\n  fixedWidth: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  inverse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  flip: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf(['horizontal', 'vertical', 'both']),\r\n  icon: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_2___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)]),\r\n  listItem: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  pull: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf(['right', 'left']),\r\n  pulse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  rotation: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([0, 90, 180, 270]),\r\n  shake: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  size: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf(['2xs', 'xs', 'sm', 'lg', 'xl', '2xl', '1x', '2x', '3x', '4x', '5x', '6x', '7x', '8x', '9x', '10x']),\r\n  spin: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  spinPulse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  spinReverse: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\r\n  symbol: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)]),\r\n  title: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\r\n  titleId: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\r\n  transform: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_2___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object)]),\r\n  swapOpacity: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool)\r\n};\r\nFontAwesomeIcon.defaultProps = {\r\n  border: false,\r\n  className: '',\r\n  mask: null,\r\n  maskId: null,\r\n  fixedWidth: false,\r\n  inverse: false,\r\n  flip: null,\r\n  icon: null,\r\n  listItem: false,\r\n  pull: null,\r\n  pulse: false,\r\n  rotation: null,\r\n  size: null,\r\n  spin: false,\r\n  beat: false,\r\n  fade: false,\r\n  beatFade: false,\r\n  bounce: false,\r\n  shake: false,\r\n  symbol: false,\r\n  title: '',\r\n  titleId: null,\r\n  transform: null,\r\n  swapOpacity: false\r\n};\r\nvar convertCurry = convert.bind(null, (react__WEBPACK_IMPORTED_MODULE_1___default().createElement));\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@fortawesome/react-fontawesome/index.es.js\n");

/***/ })

}]);